#!/usr/bin/env perl

use common::sense;
use FindBin;
use lib "$FindBin::Bin/../lib";
use SolveWith::Event;
use SolveWith::Schema;
use Mojolicious::Renderer;
use Mojo::Server;
use Time::HiRes;

$ENV{MOJO_MODE} = 'production';
my $server = Mojo::Server->new;
my $app = $server->load_app($FindBin::Bin . '/solve_with');
$app->mode('production');

my $event_id = shift || 1;
my $schema = SolveWith::Schema->connect('dbi:SQLite:' . $FindBin::Bin . '/../puzzles.db');
my $event = $schema->resultset('Event')->find($event_id) || die "No event found";

while (1) {
    my $st = Time::HiRes::time;
    my $tree_data = $event->get_puzzle_tree($app);
    my ($tree) =  $app->renderer->render(Mojolicious::Controller->new, {
        template => 'event/puzzle_table',
        tree => $tree_data,
        event => $event,
        partial=>1,
    } );
    warn(join(" ","Expire Tree time",  length($tree), Time::HiRes::time - $st));
    my $key = 'puzzle_table '  . $event->id . ' all_html';

    $app->cache->set($key, $tree, 60);

    my $key = 'puzzle tree status ' . $event_id;
    $st = Time::HiRes::time;
    my ($open_puzzles_html) = $app->renderer->render(Mojolicious::Controller->new, {
        template => 'puzzle/tree_ul',
        tree => $tree_data,
        current_id => undef,
        partial => 1});
    
    $app->cache->set($key, $open_puzzles_html, {expires_in => 120, expires_variance => .9 });
    warn(join(" ","tree-ul time",  length($open_puzzles_html), Time::HiRes::time - $st));
    sleep 5;
}

