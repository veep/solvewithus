% use List::MoreUtils qw/any none/;

<table class="table table-bordered table-condensed">
<thead>
  <tr><th class="lead">
      Puzzle 
    </th>
    <th class="lead state-column-cell">Info</th>
    <th id="headers" class="lead">Solution</th><th class="lead users-column-cell">Users</th><th class="lead">Opened</th><th class="lead">Idle/Closed</th></tr>
</thead>
<tbody>
% my (%rounds_for_dead);
  % for my $tree_round ( sort { my $an = $a->{round}->display_name; my $bn = $b->{round}->display_name; return 0 if $an eq $bn; return -1 if $an eq '_catchall'; return 1 if $bn eq '_catchall'; return $a->{round_id} <=> $b->{round_id};} @$tree ) {
%     if ($tree_round->{round}->state eq 'dead') {
%           $rounds_for_dead{$tree_round->{round_id}} =1;
%           next;
%     }
%     my $round_name = $tree_round->{round}->display_name;
%     if ($round_name ne '_catchall' ) {
%        my $only_closed_puzzles = none {$_->{state} eq 'open'} @{ $tree_round->{puzzles}  };
%        $only_closed_puzzles = $only_closed_puzzles && (any {$_->{state} eq 'closed'} @{ $tree_round->{puzzles} });
<tr class="round-row<%== ($only_closed_puzzles ? ' closed-row' : '') %>">
  <td colspan="6">
    <b>Round: <%= $round_name %></b>
    <span class="round_priority">
%        if (any {$_->{state} and $_->{state} eq 'open'} @{ $tree_round->{puzzles}  }) {
Set Open Puzzle Priorities:
      <div class="btn-group">
        <a class="btn btn-mini set_round_priority" round_id="<%= $tree_round->{round_id} %>">
          Low
        </a>
        <a class="btn btn-mini set_round_priority" round_id="<%= $tree_round->{round_id} %>">
          Normal
        </a>
        <a class="btn btn-mini set_round_priority" round_id="<%= $tree_round->{round_id} %>">
          High
        </a>
      </div>
%        }
%        if ($tree_round->{round}->state eq 'closed') {
      <button type="button" class="btn btn-mini complete_round_button" state="open" round_id="<%= $tree_round->{round_id} %>">Reopen</button>
%        } else {
      <button type="button" class="btn btn-mini complete_round_button" state="closed" round_id="<%= $tree_round->{round_id} %>">No More Puzzles</button>
%        }
      <button type="button" class="btn btn-mini kill_round_button" round_id="<%= $tree_round->{round_id} %>">Kill Round</button>
    </span>
  </td>
</tr>
%     }
%     for my $puzzle ( sort { $a->{open_time} <=> $b->{open_time} } @{ $tree_round->{puzzles} } ) {
%         if ($puzzle->{state} eq 'dead') {
%            $rounds_for_dead{$tree_round->{round_id}} =1;
%            next;
%         }
%         if ($puzzle->{state} eq 'open') {
%           my $puz_class='';
%           if ($puzzle->{priority} and lc($puzzle->{priority}) eq 'high') {
%             $puz_class=' class="lead puzzle-name-cell"';
<tr class="row-high">
%           } else {
%             $puz_class=' class="puzzle-name-cell"';
<tr>
%           }
  <td<%== $puz_class %>>
    <a href="/puzzle/<%= $puzzle->{id} %>"><%= $puzzle->{display_name}%></a>
% if ($puzzle->{summary}) {
    <br><span class="front-page-summary">Summary: <%== $puzzle->{summary} %></span>
% }
  </td>
  <td class="state-column-cell">
    <span id="puzzle-info-link-<%= $puzzle->{id} %>">
      <a href="#" data-toggle="modal" class="btn btn-mini puzzle-info-button"
         data-remote="/puzzle/infomodal/<%= $puzzle->{id} %>"
         data-target="#infoModal">
        <i class="icon-edit"></i> Info
      </a>
    </span>
    <small>
      % if ($puzzle->{priority} &&  $puzzle->{priority} ne 'normal') {
      <%= ucfirst($puzzle->{priority}) . " Priority" %>
      % }
    </small>
</td>
  <td><%== join(', ', map { "<b>$_</b>"} @{ $puzzle->{solutions} }) || ' ' %></td>
  <td class="users-column-cell"><%= join(', ', @{ $puzzle->{users_live}}) %></td>
%         } else {
<tr class="muted closed-row">
  <td class="puzzle-name-cell">
    <a class="muted" href="/puzzle/<%= $puzzle->{id} %>"><%= $puzzle->{display_name}%></a>
% if ($puzzle->{summary}) {
    <br><span class="muted front-page-summary">Summary: <%== $puzzle->{summary} %></span>
% }
  </td>
  <td class="state-column-cell">
    <span id="puzzle-info-link-<%= $puzzle->{id} %>">
      <a href="#" data-toggle="modal" class="btn btn-mini puzzle-info-button"
         data-remote="/puzzle/infomodal/<%= $puzzle->{id} %>"
         data-target="#infoModal">
        <i class="icon-edit"></i> Info
      </a>
    </span>
    <button class="btn-mini btn-link disabled">Closed</button>
  </td>
  <td><%== join(', ', map { "<b>$_</b>"} @{ $puzzle->{solutions} }) || '---' %></td>
  <td class="users-column-cell"><%= join(', ', @{ $puzzle->{users_live}})%></td>
%         }
<td><%== verbose_timediff(($currenttime||time), $puzzle->{open_time}) %></td>
%         if ($puzzle->{state} eq 'open') {
<td><%== verbose_timediff(($currenttime||time), $puzzle->{activity_time}, 1) %></td>
%         } else {
<td><%== verbose_timediff(($currenttime||time), $puzzle->{state_change_time} || time) %></td>
%         }
</tr>
%     }
% }
</tbody>
</table>

% if (%rounds_for_dead) {
<table class="table table-bordered table-condensed dead-rounds">
<thead>
  <caption>"Dead" Rounds and Puzzles</caption>
  <tr class="dead-row"><th class="lead">
      Puzzle 
      </button>
    </th>
    <th class="lead state-column-cell">State</th>
    <th class="lead">Opened</th><th class="lead">Killed</th></tr>
</thead>
<tbody>
%   for my $tree_round ( sort { my $an = $a->{round}->display_name; my $bn = $b->{round}->display_name; return 0 if $an eq $bn; return -1 if $an eq '_catchall'; return 1 if $bn eq '_catchall'; return $a->{round_id} <=> $b->{round_id};} @$tree ) {
%     next unless ($rounds_for_dead{$tree_round->{round_id}});
%     my $round_name = $tree_round->{round}->display_name;
%     if ($round_name ne '_catchall' ) {
%        if ($tree_round->{round}->state eq 'dead') {
<tr class="round-row dead-row">
  <td><b>Round: <%= $round_name %></b></td>
  <td colspan="3">Dead <button type="button" round_id="<%= $tree_round->{round_id} %>" class="btn btn-mini revive_round_button">Revive Round</button></td>
</tr>
%        } else {
<tr class="round-row"><td colspan="4"><b>Round: <%= $round_name %></b></td></tr>
%        }
%     }
%     for my $puzzle ( sort { $a->{open_time} <=> $b->{open_time} } @{ $tree_round->{puzzles} } ) {
%         next if ($puzzle->{state} ne 'dead');
%         next if ($round_name eq '_catchall' and scalar $puzzle->{puzzle}->rounds > 1);
<tr class="dead-row">
  <td>
    <a href="/puzzle/<%= $puzzle->{id} %>"><%= $puzzle->{display_name}%></a>
  </td>
  <td>
    Dead <button type="button" puzzle_id="<%= $puzzle->{id} %>" class="btn btn-mini revive_puzzle_button">Revive Puzzle</button>
  </td>
  <td>
    <%== verbose_timediff(($currenttime||time), $puzzle->{open_time}) %>
  </td>
  <td>
    <%== verbose_timediff(($currenttime||time), $puzzle->{state_change_time}) %>
  </td>
</tr>
%     }
%   }
</tbody>
</table>

% }







% sub verbose_timediff {
%    my ($now,$base,$idle) = @_;
%    my $diff =  $now - $base;
%    return ($idle ? '<b>Active</b>' : '<b>Just Now</b>') if $diff < 60;
%    my ($num, $unit) = (int($diff/(60*60*24)), 'Day');
%    ($num,$unit) = (int(10*$diff/(60*60))/10, 'Hour') if $diff < 60*60*24*2;
%    ($num,$unit) = (int($diff/60),'Minute') if $diff < 60*60*2;
%    $unit .= 's' if $num ne '1';
%    return "$num $unit Ago" unless $idle;
%    return "$num $unit";
% }

%= javascript begin
apply_hide_closed_rows();
$(".complete_round_button").click(function () {
    $(this).fadeTo('fast', 0.2);
    jQuery.post('/event/modal', { formname : 'complete_round', 
                                   roundid : $(this).attr('round_id'),
                                   state : $(this).attr('state'),
                                                        
                                 }
               );
});
$(".kill_round_button").click(function () {
    $(this).fadeTo('fast', 0.2);
    jQuery.post('/event/modal', { formname : 'kill_round', 
                                   roundid : $(this).attr('round_id'),
                                 }
               );
});
$(".revive_round_button").click(function () {
    $(this).fadeTo('fast', 0.2);
    jQuery.post('/event/modal', { formname : 'revive_round', 
                                   roundid : $(this).attr('round_id'),
                                 }
               );
});
$(".revive_puzzle_button").click(function () {
    $(this).fadeTo('fast', 0.2);
    jQuery.post('/puzzle/modal', { formname : 'revive_puzzle', 
                                   puzzleid : $(this).attr('puzzle_id'),
                                 }
               );
});
$(".set_round_priority").click(function () {
    jQuery.post('/event/modal', { formname : 'set_round_priority', 
                                   roundid : $(this).attr('round_id'),                                                        
                                  priority : $(this).text()
                                 }
               );
});

    
%end
